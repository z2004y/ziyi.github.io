document.addEventListener('DOMContentLoaded', () => {
  const searchEngineIcon = document.getElementById('search-engine-icon');
  const searchEngineDropdown = document.getElementById('search-engine-dropdown');
  const searchInput = document.getElementById('search-input');
  const searchButton = document.getElementById('search-button');
  const scrollToTopBtn = document.getElementById('scrollToTopBtn');
  const messageBox = document.createElement('div');
  let currentSearchEngine = 'https://www.google.com/search?q=';
  let currentPlaceholder = 'Search Google...';
  let isPageSearch = false;

  searchEngineDropdown.style.display = 'none';

  // 创建提示消息框
  messageBox.style.position = 'fixed';
  messageBox.style.bottom = '20px';
  messageBox.style.left = '50%';
  messageBox.style.transform = 'translateX(-50%)';
  messageBox.style.backgroundColor = '#f8d7da';
  messageBox.style.color = '#721c24';
  messageBox.style.padding = '10px 20px';
  messageBox.style.border = '1px solid #f5c6cb';
  messageBox.style.borderRadius = '5px';
  messageBox.style.display = 'none'; // 初始状态隐藏
  document.body.appendChild(messageBox);

  searchEngineIcon.addEventListener('click', () => {
    searchEngineDropdown.style.display = searchEngineDropdown.style.display === 'none' ? 'grid' : 'none';
  });

  searchEngineDropdown.addEventListener('click', (e) => {
    if (e.target.tagName === 'IMG') {
      if (e.target.id === 'search-this-page') {
        isPageSearch = true;
        currentPlaceholder = e.target.getAttribute('data-placeholder'); // 更新占位符
        searchInput.placeholder = currentPlaceholder;
        searchEngineIcon.querySelector('img').src = e.target.src; // 更新图标为“搜索此页面”的图标
      } else {
        isPageSearch = false;
        currentSearchEngine = e.target.getAttribute('data-url');
        currentPlaceholder = e.target.getAttribute('data-placeholder'); // 更新占位符
        searchInput.placeholder = currentPlaceholder;
        searchEngineIcon.querySelector('img').src = e.target.src; // 更新图标为所选搜索引擎的图标
      }
      searchEngineDropdown.style.display = 'none';
    }
  });

  const performSearch = () => {
    const query = searchInput.value.trim();
    if (isPageSearch) {
      if (query === '') {
        messageBox.textContent = '请输入搜索内容';
        messageBox.style.display = 'block';
        setTimeout(() => messageBox.style.display = 'none', 3000); // 3秒后隐藏
        return;
      }
      const searchResult = searchInContent(query);
      if (!searchResult) {
        messageBox.textContent = '未找到匹配项';
        messageBox.style.display = 'block';
        setTimeout(() => messageBox.style.display = 'none', 3000); // 3秒后隐藏
      }
    } else {
      window.open(currentSearchEngine + encodeURIComponent(query), '_blank');
    }
  };

  const searchInContent = (query) => {
    let found = false;
    clearHighlights();

    const elementsToSearch = Array.from(document.body.querySelectorAll('.grid-item, .section-title'));
    elementsToSearch.forEach(element => {
      const elementText = element.textContent || element.innerText;
      const regex = new RegExp(query, 'i'); // 使用不区分大小写的正则表达式
      if (regex.test(elementText)) {
        element.classList.add('highlight');
        element.scrollIntoView({ behavior: 'smooth', block: 'center' });
        found = true;
      }
    });

    if (found) {
      setTimeout(clearHighlights, 3000); // 3秒后清除高亮
    }

    return found;
  };

  const clearHighlights = () => {
    document.querySelectorAll('.highlight').forEach(el => {
      el.classList.remove('highlight');
    });
  };

  searchButton.addEventListener('click', performSearch);

  searchInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
      performSearch();
    }
  });

  document.addEventListener('click', (e) => {
    if (!searchEngineIcon.contains(e.target) && !searchEngineDropdown.contains(e.target)) {
      searchEngineDropdown.style.display = 'none';
    }
  });

  // 置顶按钮显示和隐藏逻辑
  window.onscroll = () => {
    if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
      scrollToTopBtn.style.display = 'block';
    } else {
      scrollToTopBtn.style.display = 'none';
    }
  };

  // 滚动到顶部函数
  scrollToTopBtn.onclick = () => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  };
});